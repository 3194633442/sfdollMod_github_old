#需要有event_target:sfdoll_planet_killer_fleet,scope solar_system
effect_sfdoll_empty_system = {
	optimize_memory
	# if = {
	# 	limit = { exists = event_target:crisis_country }
	# 	fire_on_action = {
	# 		on_action = on_destroy_star_system
	# 		scopes = { from = event_target:crisis_country }
	# 	}
	# }
	# else = {
	# 	fire_on_action = { on_action = on_destroy_star_system }
	# }
	set_star_flag = star_cracked
	set_star_class = sc_black_hole
	every_system_ambient_object = {
		# limit = {
		# 	# Preserve Unbidden crisis effects
		# 	NOR = {
		# 		has_ambient_object_flag = extradimensional_system_effect
		# 		has_ambient_object_flag = extradimensional_system_effect_2
		# 	}
		# }
		destroy_ambient_object = this
	}
	star = {
		save_event_target_as = target_sfdoll_planet_killer_star
	}
	every_system_planet = {
		if = {
			limit = { is_colony = yes }
			every_owned_pop = {
				kill_pop = yes
			}
			destroy_colony = yes
		}
		if = {
			limit = {
				is_planet = event_target:target_sfdoll_planet_killer_star
			}
			solar_system = {
				spawn_planet = {
					class = pc_black_hole
					location = event_target:target_sfdoll_planet_killer_star
					size = 5
					has_ring = no
					init_effect = {
						set_name = event_target:target_sfdoll_planet_killer_star
						set_surveyed = {
							surveyed = yes
							surveyor = event_target:sfdoll_planet_killer_fleet.owner
						}
						set_all_comms_surveyed = yes
						# clear_blockers = yes
						# set_planet_entity = {
						# 	entity = GF_nyto_habita_entity
						# }
					}
				}
			}
			remove_planet = yes
		}
		else = {
			remove_planet = yes
		}
	}

	every_fleet_in_system = {
		limit = {
			NOT = {
				owner = {
					is_same_value = event_target:sfdoll_planet_killer_fleet.owner
				}
			}
		}
		destroy_fleet = this
	}

	every_system_megastructure = {
		remove_megastructure = this
	}
}

#country,生成航道修改信标
effect_create_sfdoll_change_hyperlane_ship = {
	optimize_memory
	capital_scope = {
		delete_fleet = event_target:fleet_beacon_sfdoll_1
		clear_global_event_target = fleet_beacon_sfdoll_1
		delete_fleet = event_target:fleet_beacon_sfdoll_2
		clear_global_event_target = fleet_beacon_sfdoll_2

		solar_system = {
			create_fleet = {
				name = "sfdoll_change_hyperlane_ship"
				effect = {
					set_owner = root
					create_ship = {
						design = design_sfdoll_change_hyperlane_ship
						name = sfdoll_change_hyperlane_ship
						prefix = no
						upgradable = no
					}
					set_location = ROOT.capital_scope
					save_global_event_target_as = fleet_beacon_sfdoll_1
					# set_event_locked = yes
				}
				settings = {
					can_upgrade = no 
					uses_naval_capacity = no
					spawn_debris = no
					can_disband = yes
					can_change_leader = no
					can_change_composition = no
				}
			}

			create_fleet = {
				name = "sfdoll_change_hyperlane_ship"
				effect = {
					set_owner = root
					create_ship = {
						design = design_sfdoll_change_hyperlane_ship
						name = sfdoll_change_hyperlane_ship
						upgradable = no
					}
					set_location = ROOT.capital_scope
					save_global_event_target_as = fleet_beacon_sfdoll_2
					# set_event_locked = yes
				}
				settings = {
					can_upgrade = no 
					uses_naval_capacity = no
					spawn_debris = no
					can_disband = yes
					can_change_leader = no
					can_change_composition = no
				}
			}
		}
	}	
}

#修改超空间航道
effect_change_hyperlane_sfdoll = {
	optimize_memory
	event_target:fleet_beacon_sfdoll_1 = {
		solar_system = {
			save_event_target_as = system_beacon_sfdoll_1
		}
	}
	event_target:fleet_beacon_sfdoll_2= {
		solar_system = {
			save_event_target_as = system_beacon_sfdoll_2
		}
	}
	if = {
		limit = { 
			event_target:system_beacon_sfdoll_1 = {
				has_hyperlane_to = event_target:system_beacon_sfdoll_2
			}
		}
		remove_hyperlane = {
			from = event_target:system_beacon_sfdoll_1
			to = event_target:system_beacon_sfdoll_2
		}
	}
	else = {
		add_hyperlane = {
			from = event_target:system_beacon_sfdoll_1
			to = event_target:system_beacon_sfdoll_2
		}
	}	
}

#摧毁恒星系
# effect_sfdoll_destroy_star_system = {
# 	if = {
# 		limit = { exists = event_target:crisis_country }
# 		fire_on_action = {
# 			on_action = on_destroy_star_system
# 			scopes = { 	from = event_target:crisis_country 	}
# 		}
# 	}
# 	else = {
# 		fire_on_action = { on_action = on_destroy_star_system }
# 	}
# }